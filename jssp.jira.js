!function(){var e=require("xmlhttprequest").XMLHttpRequest;function t(e){let s="";return e.forEach((e=>{e.content?s+=" "+t(e.content):e.text&&(s+=e.text+" ")})),s.trim()}metadata={systemName:"JSONPlaceholder",displayName:"JSONPlaceholder Broker",description:"Sample broker for JSONPlaceholder",configuration:{ServiceURL:{displayName:"JSONPlaceholder Service URL",type:"string",value:"https://quogent.atlassian.net/rest/api/3/",required:!0},api_key:{displayName:"API Key",type:"string",value:"",required:!0}}},ondescribe=async function({configuration:e}){postSchema({objects:{Issue:{displayName:"Issue",description:"Issues and Incidents",properties:{id:{displayName:"id",type:"number"},key:{displayName:"key",type:"string"},summary:{displayName:"summary",type:"string"},description:{displayName:"description",type:"string"},type:{displayName:"type",type:"string"},status:{displayName:"status",type:"string"}},methods:{getList:{displayName:"Get Issues List",type:"list",outputs:["id","key","summary","description","type","status"]},getByKey:{displayName:"Get Issue By key",type:"read",inputs:["key"],outputs:["id","key","summary","description","type","status"]},transition:{displayName:"Transition an issue",type:"read",inputs:["key","transition-id","resolution"],outputs:["key"]}}},Transition:{displayName:"Transition",description:"Transitions for issue",properties:{id:{displayName:"id",type:"number"},name:{displayName:"name",type:"string"},"transition-to-name":{displayName:"transition-to-name",type:"string"},"transition-to-status":{displayName:"transition-to-status",type:"string"}},methods:{getListForIssue:{displayName:"Get Issues List",type:"list",inputs:["issueKey"],outputs:["id","name","transition-to-name","transition-to-status"]}}}}})},onexecute=async function({objectName:s,methodName:i,parameters:a,properties:n,configuration:r}){switch(s){case"Issue":await async function(s,i,a,n){switch(s){case"getList":await function(s,i,a){return new Promise(((s,i)=>{var n=a.ServiceURL+"search",r=new e;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);var e=JSON.parse(r.responseText);postResult(e.issues.map((e=>({id:e.id,key:e.key,summary:e.fields.summary,description:t(e.fields.description.content),type:e.fields.issuetype.name,status:e.fields.status.name})))),s()}catch(e){i(e)}},r.open("GET",n),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Basic "+a.api_key),r.send()}))}(0,0,n);break;case"getByKey":await function(s,i,a){return new Promise(((s,n)=>{var r=a.ServiceURL+"issue/",o=new e;o.onreadystatechange=function(){try{if(4!==o.readyState)return;if(200!==o.status)throw new Error("Failed with status "+o.status);var e=JSON.parse(o.responseText),i={id:e.id,key:e.key,summary:e.fields.summary,description:t(e.fields.description.content),type:e.fields.issuetype.name,status:e.fields.status.name};console.log(i),postResult(i),s()}catch(e){n(e)}},console.log("calling service at "+r+encodeURIComponent(""+i.key)),o.open("GET",r+encodeURIComponent(""+i.key)),o.setRequestHeader("Content-Type","application/json"),o.setRequestHeader("Authorization","Basic "+a.api_key),o.send()}))}(0,a,n);break;case"transition":await function(t,s,i){return new Promise(((a,n)=>{var r=i.ServiceURL+"issue/",o=new e;o.onreadystatechange=function(){try{if(4!==o.readyState)return;if(200!==o.status&&204!==o.status)throw new Error("Failed with status "+o.status);var e={key:s.key};postResult(e),a()}catch(e){console.log(o.responseText),n(e)}};var u=t["transition-id"],p=t.resolution,d={transition:{id:u}};""!==p&&(d.resolution={fields:{resolution:{name:p}}}),console.log("Sending payload "+JSON.stringify(d)),console.log("calling service at "+r+encodeURIComponent(s.key+"/transition")),o.open("POST",r+encodeURIComponent(s.key+"/transitions")),o.setRequestHeader("Content-Type","application/json"),o.setRequestHeader("Authorization","Basic "+i.api_key),o.send(JSON.stringify(d))}))}(i,a,n);break;default:throw new Error("The method "+s+" is not supported.")}}(i,a,n,r);break;case"Transition":await async function(t,s,i,a){switch(t){case"getListForIssue":await function(t,s,i){return new Promise(((t,a)=>{var n=i.ServiceURL+"issue",r=new e;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);var e=JSON.parse(r.responseText);postResult(e.transitions.map((e=>({id:e.id,key:e.name,"transition-to-name":e.to.name,"transition-to-status":e.to.statusCategory.name})))),t()}catch(e){a(e)}},console.log("calling service at "+n+encodeURIComponent("/"+s.issueKey+"/transitions")),r.open("GET",n+encodeURIComponent("/"+s.issueKey+"/transitions")),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Basic "+i.api_key),r.send()}))}(0,i,a);break;default:throw new Error("The method "+t+" is not supported.")}}(i,0,n,r);break;default:throw new Error("The object "+s+" is not supported.")}}}();
//# sourceMappingURL=index.js.map
