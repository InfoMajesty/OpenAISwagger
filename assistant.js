metadata={systemName:"com.quoegnt.openai.assistantai",displayName:"OpenAI Assistant Broker",description:"K2 JSSP broker for Open AI assistant related functionality",configuration:{api_key:{displayName:"API Key",type:"string",value:""},assistantURL:{displayName:"URL thread and asisstant",type:"string"},assistant_id:{displayName:"Assistant ID",type:"string"}}},ondescribe=async function({configuration:e}){postSchema({objects:{assistant:{displayName:"Assistant",description:"Query an asssistant",properties:{query:{displayName:"query",type:"string"},response:{displayName:"response",type:"string"},thread_id:{displayName:"Thread ID",type:"string"},message_id:{displayName:"Message ID",type:"string"},thread_run_id:{displayName:"Thread Run ID",type:"string"}},methods:{echo:{displayName:"Echo the message",type:"create",outputs:["response"]},createThread:{displayName:"Create a new thread",type:"create",outputs:["thread_id"]},addMessageToThread:{displayName:"Add Message to the Thread",type:"update",inputs:["role","query","thread_id"],outputs:["message_id"]},runAssistant:{displayName:"Run Assistant",type:"read",inputs:["thread_id"],outputs:["thread_run_id"]},getAssistantResponse:{displayName:"Get Assistant Response",type:"read",inputs:["thread_id"],outputs:["response"]},deleteThread:{displayName:"Delete Thread",type:"read",inputs:["thread_id"],outputs:["thread_run_id"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:s,properties:a,configuration:r,schema:n}){switch(e){case"assistant":await async function(e,t,s,a){switch(e){case"echo":await new Promise((e,t)=>{try{postResult({response:"echo"}),e()}catch(e){t(e)}});break;case"createThread":await function(e,t){return new Promise((e,s)=>{var a=new XMLHttpRequest;a.onreadystatechange=function(){try{if(4!==a.readyState)return;if(200!==a.status)throw new Error("Failed with status "+a.status);console.log(a.responseText);var t=JSON.parse(a.responseText);console.log(t.id),postResult({thread_id:t.id}),e()}catch(e){s(e)}};var r=t.assistantURL;a.open("POST",r),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+t.api_key),a.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),a.send()})}(0,a);break;case"addMessageToThread":await function(e,t){return new Promise((s,a)=>{var r=new XMLHttpRequest;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);console.log(r.responseText);var e=JSON.parse(r.responseText);postResult({message_id:e.id?e.id:"No response"}),s()}catch(e){a(e)}};var n={role:e.role,content:e.query},o=e.thread_id,i=t.assistantURL+"/"+o+"/messages";r.open("POST",i),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+t.api_key),r.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),r.send(JSON.stringify(n))})}(s,a);break;case"runAssistant":await function(e,t){return new Promise((s,a)=>{var r=new XMLHttpRequest;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);console.log(r.responseText);var e=JSON.parse(r.responseText);postResult({thread_run_id:e.id?e.id:"No response"}),s()}catch(e){a(e)}};var n=e.thread_id,o=t.assistantURL+"/"+n+"/runs";console.log(o),r.open("POST",o),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+t.api_key),r.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),r.send(JSON.stringify({assistant_id:t.assistant_id}))})}(s,a);break;case"getAssistantResponse":await function(e,t){return new Promise((s,a)=>{var r=new XMLHttpRequest;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);console.log(r.responseText);var e=JSON.parse(r.responseText);console.log(e.data[0].content[0].text),postResult({response:e.data[0]?e.data[0].content[0].text:"No response"}),s()}catch(e){a(e)}};var n=t.assistantURL+"/"+e.thread_id+"/messages";r.open("GET",n),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+t.api_key),r.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),r.send()})}(s,a);break;case"deleteThread":await function(e,t){return new Promise((s,a)=>{var r=new XMLHttpRequest;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);console.log(r.responseText),postResult({response:r.responseText}),s()}catch(e){a(e)}};var n=t.assistantURL+"/"+e.thread_id;r.open("DELETE",n),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+t.api_key),r.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Deleting thread"),r.send()})}(s,a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,0,a,r);break;default:throw new Error("The object "+e+" is not supported.")}};
//# sourceMappingURL=assistant.js.map
