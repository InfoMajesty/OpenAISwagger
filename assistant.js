!function(){var e=require("xmlhttprequest").XMLHttpRequest;metadata={systemName:"com.quoegnt.openai.assistantai",displayName:"OpenAI Assistant Broker",description:"K2 JSSP broker for Open AI assistant",configuration:{api_key:{displayName:"API Key",type:"string",value:""},assistantURL:{displayName:"URL thread and asisstant",type:"string"},assistant_id:{displayName:"Assistant ID",type:"string"}}},ondescribe=async function({configuration:e}){postSchema({objects:{assistant:{displayName:"Assistant",description:"Query an asssistant",properties:{query:{displayName:"query",type:"string"},response:{displayName:"response",type:"string"},thread_id:{displayName:"Thread ID",type:"string"},message_id:{displayName:"Message ID",type:"string"},thread_run_id:{displayName:"Thread Run ID",type:"string"}},methods:{createThread:{displayName:"Create a new thread",type:"create",outputs:["thread_id"]},addMessageToThread:{displayName:"Add Message to the Thread",type:"update",inputs:["role","query","thread_id"],outputs:["message_id"]},runAssistant:{displayName:"Run Assistant",type:"read",inputs:["thread_id"],outputs:["thread_run_id"]},getAssistantResponse:{displayName:"Get Assistant Response",type:"read",inputs:["thread_id"],outputs:["response"]},deleteThread:{displayName:"Delete Thread",type:"read",inputs:["thread_id"],outputs:["thread_run_id"]}}}}})},onexecute=async function({objectName:t,methodName:s,parameters:a,properties:r,configuration:n,schema:o}){switch(t){case"assistant":await async function(t,s,a,r){switch(t){case"createThread":await function(t,s){return new Promise((t,a)=>{var r=new e;r.onreadystatechange=function(){try{if(4!==r.readyState)return;if(200!==r.status)throw new Error("Failed with status "+r.status);console.log(r.responseText);var e=JSON.parse(r.responseText);console.log(e.id),postResult({response:e.id?e.id:"No response"}),t()}catch(e){a(e)}};var n=s.assistantURL;r.open("POST",n),r.setRequestHeader("Content-Type","application/json"),r.setRequestHeader("Authorization","Bearer "+s.api_key),r.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),r.send()})}(0,r);break;case"addMessageToThread":await function(t,s){return new Promise((a,r)=>{var n=new e;n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);console.log(n.responseText);var e=JSON.parse(n.responseText);postResult({response:e.id?e.id:"No response"}),a()}catch(e){r(e)}};var o={role:t.role,content:t.query},i=t.thread_id,d=s.assistantURL+"/"+i+"/messages";n.open("POST",d),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+s.api_key),n.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),n.send(JSON.stringify(o))})}(a,r);break;case"runAssistant":await function(t,s){return new Promise((a,r)=>{var n=new e;n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);console.log(n.responseText);var e=JSON.parse(n.responseText);postResult({response:e.id?e.id:"No response"}),a()}catch(e){r(e)}};var o=t.thread_id,i=s.assistantURL+"/"+o+"/runs";console.log(i),n.open("POST",i),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+s.api_key),n.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),n.send(JSON.stringify({assistant_id:s.assistant_id}))})}(a,r);break;case"getAssistantResponse":await function(t,s){return new Promise((a,r)=>{var n=new e;n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);console.log(n.responseText);var e=JSON.parse(n.responseText);console.log(e.data[0].content[0].text),postResult({response:e.data[0]?e.data[0].content[0].text:"No response"}),a()}catch(e){r(e)}};var o=s.assistantURL+"/"+t.thread_id+"/messages";n.open("GET",o),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+s.api_key),n.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Creating a Thread"),n.send()})}(a,r);break;case"deleteThread":await function(t,s){return new Promise((a,r)=>{var n=new e;n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);console.log(n.responseText),postResult({response:n.responseText}),a()}catch(e){r(e)}};var o=s.assistantURL+"/"+t.thread_id;n.open("DELETE",o),n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("Authorization","Bearer "+s.api_key),n.setRequestHeader("OpenAI-Beta","assistants=v2"),console.log("Deleting thread"),n.send()})}(a,r);break;default:throw new Error("The method "+t+" is not supported.")}}(s,0,r,n);break;default:throw new Error("The object "+t+" is not supported.")}}}();
//# sourceMappingURL=assistant.js.map
